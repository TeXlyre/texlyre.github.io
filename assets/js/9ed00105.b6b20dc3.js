"use strict";(globalThis.webpackChunktexlyre=globalThis.webpackChunktexlyre||[]).push([[3873],{1123:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/fork-repository-d8b9ff9e98f2a38299831dec3d36fdb6.png"},1653:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/export-dialog-a3cb9f58fc274daecf6c0e59a0ac40d8.png"},2882:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/github-pages-settings-c43858bccf91484e014ef0f364013f49.png"},2949:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/github-actions-workflow-09be2019acbc96be5a0fd51891bf11af.png"},4942:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/settings-panel-0c300846ea8e7b6e219b93d31b629b84.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},8633:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"configuration","title":"Configuration","description":"TeXlyre uses a centralized configuration system that generates runtime files from a single source of truth: texlyre.config.ts.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/texlyre/docs/tree/main/docs/configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Attributions","permalink":"/docs/attributions"}}');var t=i(4848),r=i(8453);const o={},l="Configuration",c={},d=[{value:"Configuration Files",id:"configuration-files",level:2},{value:"Source Configuration",id:"source-configuration",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Configuration Structure",id:"configuration-structure",level:2},{value:"Basic Metadata",id:"basic-metadata",level:3},{value:"Plugin Configuration",id:"plugin-configuration",level:3},{value:"User Data Configuration",id:"user-data-configuration",level:3},{value:"Generating Configuration Files",id:"generating-configuration-files",level:2},{value:"Development",id:"development",level:3},{value:"Production Build",id:"production-build",level:3},{value:"Exporting Custom User Data",id:"exporting-custom-user-data",level:2},{value:"Step 1: Configure Settings",id:"step-1-configure-settings",level:3},{value:"Step 2: Export Account Data",id:"step-2-export-account-data",level:3},{value:"Step 3: Include Settings",id:"step-3-include-settings",level:3},{value:"Step 4: Extract Configuration",id:"step-4-extract-configuration",level:3},{value:"Forking and Deployment",id:"forking-and-deployment",level:2},{value:"GitHub Pages Deployment",id:"github-pages-deployment",level:3},{value:"Step 1: Fork Repository",id:"step-1-fork-repository",level:4},{value:"Step 2: Enable GitHub Pages",id:"step-2-enable-github-pages",level:4},{value:"Step 3: Configure texlyre.config.ts",id:"step-3-configure-texlyreconfigts",level:4},{value:"Step 4: Automatic Build Process",id:"step-4-automatic-build-process",level:4},{value:"Custom Domain Configuration",id:"custom-domain-configuration",level:3},{value:"Configuration Workflow",id:"configuration-workflow",level:2},{value:"Recommended Workflow",id:"recommended-workflow",level:3},{value:"Local Development Overrides",id:"local-development-overrides",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Configuration Not Applied",id:"configuration-not-applied",level:3},{value:"Plugin Not Loading",id:"plugin-not-loading",level:3},{value:"Build Failures",id:"build-failures",level:3}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["TeXlyre uses a centralized configuration system that generates runtime files from a single source of truth: ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,t.jsx)(n.h3,{id:"source-configuration",children:"Source Configuration"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"texlyre.config.ts"})})," - The primary configuration file defining all application settings, properties, and plugin registrations. This file serves as the single source of truth for your TeXlyre instance."]}),"\n",(0,t.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,t.jsxs)(n.p,{children:["The following files are ",(0,t.jsx)(n.strong,{children:"automatically generated"})," from ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"plugins.config.js"})})," - Plugin registry used at runtime"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"userdata.json"})})," - Default user settings and properties"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"userdata.local.json"})})," - Local development overrides (when ",(0,t.jsx)(n.code,{children:"userdata.local"})," is defined)"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{title:"Automatic Overwrites",type:"danger",children:[(0,t.jsxs)(n.p,{children:["Running ",(0,t.jsx)(n.code,{children:"npm run start"})," or ",(0,t.jsx)(n.code,{children:"npm run generate-configs"})," will ",(0,t.jsx)(n.strong,{children:"completely overwrite"})," the following files:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"plugins.config.js"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"userdata.json"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"userdata.local.json"})}),"\n"]}),(0,t.jsxs)(n.p,{children:["Any manual changes to these files will be lost. Always edit ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," instead."]})]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,t.jsx)(n.h3,{id:"basic-metadata",children:"Basic Metadata"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const config: TexlyreConfig = {\n  title: 'TeXlyre',\n  tagline: 'A local-first LaTeX & Typst collaborative web editor',\n  url: 'https://texlyre.github.io',\n  baseUrl: '/texlyre/',\n  organizationName: 'texlyre',\n  projectName: 'texlyre',\n  favicon: '/src/assets/images/TeXlyre_notext.png',\n  // ...\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"plugin-configuration",children:"Plugin Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Register plugins by category. All plugin paths are relative to the ",(0,t.jsx)(n.code,{children:"extras"})," directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"plugins: {\n  collaborative_viewers: ['bibtex'],\n  viewers: ['bibtex', 'image', 'pdf'],\n  renderers: ['pdf', 'svg', 'canvas'],\n  loggers: ['latex_visualizer', 'typst_visualizer'],\n  lsp: [],\n  backup: ['github'],\n  themes: ['texlyre_slim', 'texlyre_wide', 'texlyre_mobile'],\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"user-data-configuration",children:"User Data Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Define default settings and optional local overrides:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"userdata: {\n  default: {\n    settings: {\n      editor: {\n        fontSize: 'base',\n        fontFamily: 'monospace',\n        // ...\n      },\n      // ...\n    },\n    properties: {\n      global: {\n        sidebarWidth: 502,\n        // ...\n      },\n    },\n    secrets: {},\n  },\n  local: {\n    settings: {\n      latex: {\n        texliveEndpoint: 'http://localhost:5004',\n      },\n      // ...\n    },\n  },\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generating-configuration-files",children:"Generating Configuration Files"}),"\n",(0,t.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,t.jsx)(n.p,{children:"Generate configuration files during development:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run generate-configs\n"})}),"\n",(0,t.jsx)(n.p,{children:"This command:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Reads ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})]}),"\n",(0,t.jsxs)(n.li,{children:["Generates ",(0,t.jsx)(n.code,{children:"plugins.config.js"})]}),"\n",(0,t.jsxs)(n.li,{children:["Generates ",(0,t.jsx)(n.code,{children:"userdata.json"})," from ",(0,t.jsx)(n.code,{children:"default"})," settings"]}),"\n",(0,t.jsxs)(n.li,{children:["Generates ",(0,t.jsx)(n.code,{children:"userdata.local.json"})," by merging ",(0,t.jsx)(n.code,{children:"default"})," with ",(0,t.jsx)(n.code,{children:"local"})," overrides"]}),"\n",(0,t.jsxs)(n.li,{children:["Updates ",(0,t.jsx)(n.code,{children:"vite.config.ts"})," with the correct ",(0,t.jsx)(n.code,{children:"baseUrl"})]}),"\n",(0,t.jsxs)(n.li,{children:["Updates ",(0,t.jsx)(n.code,{children:"index.html"})," with title and favicon"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"production-build",children:"Production Build"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"start"})," script automatically runs configuration generation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This executes ",(0,t.jsx)(n.code,{children:"generate-configs"})," before building the application."]}),"\n",(0,t.jsx)(n.h2,{id:"exporting-custom-user-data",children:"Exporting Custom User Data"}),"\n",(0,t.jsxs)(n.p,{children:["You can create custom ",(0,t.jsx)(n.code,{children:"userdata.json"})," files from your TeXlyre instance:"]}),"\n",(0,t.jsx)(n.h3,{id:"step-1-configure-settings",children:"Step 1: Configure Settings"}),"\n",(0,t.jsx)(n.p,{children:"Customize your settings and properties within the TeXlyre application to match your preferred configuration."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"TeXlyre settings panel showing various configuration options",src:i(4942).A+"",width:"892",height:"813"})}),"\n",(0,t.jsx)(n.h3,{id:"step-2-export-account-data",children:"Step 2: Export Account Data"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Click your profile icon in the top-right corner"}),"\n",(0,t.jsxs)(n.li,{children:["Select ",(0,t.jsx)(n.strong,{children:"Export Account"})," from the dropdown menu"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Profile dropdown menu with Export Account option highlighted",src:i(9806).A+"",width:"452",height:"293"})}),"\n",(0,t.jsx)(n.h3,{id:"step-3-include-settings",children:"Step 3: Include Settings"}),"\n",(0,t.jsxs)(n.p,{children:["In the export dialog, ensure ",(0,t.jsx)(n.strong,{children:'"Include settings, properties, and encrypted secrets"'})," is checked."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Export dialog with settings checkbox enabled",src:i(1653).A+"",width:"692",height:"559"})}),"\n",(0,t.jsx)(n.h3,{id:"step-4-extract-configuration",children:"Step 4: Extract Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The downloaded ZIP file contains ",(0,t.jsx)(n.code,{children:"userdata.json"})," in the root directory. Extract this file to use as your custom configuration."]}),"\n",(0,t.jsxs)(n.admonition,{title:"Manual Secret Cleanup",type:"warning",children:[(0,t.jsxs)(n.p,{children:["The exported ",(0,t.jsx)(n.code,{children:"userdata.json"})," includes encrypted secrets. You must manually set the ",(0,t.jsx)(n.code,{children:"secrets"})," field to an empty object:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "settings": { /* ... */ },\n  "properties": { /* ... */ },\n  "secrets": {}\n}\n'})})]}),"\n",(0,t.jsxs)(n.admonition,{title:"Configuration Override",type:"danger",children:[(0,t.jsxs)(n.p,{children:["Placing a custom ",(0,t.jsx)(n.code,{children:"userdata.json"})," in your repository will be ",(0,t.jsx)(n.strong,{children:"overwritten"})," when running:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"npm run start"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"npm run generate-configs"})}),"\n"]}),(0,t.jsxs)(n.p,{children:["To preserve custom configurations, update ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," instead."]})]}),"\n",(0,t.jsx)(n.h2,{id:"forking-and-deployment",children:"Forking and Deployment"}),"\n",(0,t.jsx)(n.h3,{id:"github-pages-deployment",children:"GitHub Pages Deployment"}),"\n",(0,t.jsx)(n.p,{children:"When forking TeXlyre for GitHub Pages deployment, the configuration generation process runs automatically."}),"\n",(0,t.jsx)(n.h4,{id:"step-1-fork-repository",children:"Step 1: Fork Repository"}),"\n",(0,t.jsx)(n.p,{children:"Fork the TeXlyre repository to your GitHub account."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"GitHub fork button on TeXlyre repository",src:i(1123).A+"",width:"677",height:"545"})}),"\n",(0,t.jsx)(n.h4,{id:"step-2-enable-github-pages",children:"Step 2: Enable GitHub Pages"}),"\n",(0,t.jsxs)(n.p,{children:["Navigate to repository ",(0,t.jsx)(n.strong,{children:"Settings"})," \u2192 ",(0,t.jsx)(n.strong,{children:"Pages"})," and configure the deployment source."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"GitHub Pages settings showing source configuration",src:i(2882).A+"",width:"1026",height:"800"})}),"\n",(0,t.jsx)(n.h4,{id:"step-3-configure-texlyreconfigts",children:"Step 3: Configure texlyre.config.ts"}),"\n",(0,t.jsxs)(n.p,{children:["Update ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," with your deployment details:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const config: TexlyreConfig = {\n  title: 'My TeXlyre Instance',\n  url: 'https://yourusername.github.io',\n  baseUrl: '/your-repo-name/',\n  organizationName: 'yourusername',\n  projectName: 'your-repo-name',\n  // ...\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"step-4-automatic-build-process",children:"Step 4: Automatic Build Process"}),"\n",(0,t.jsx)(n.p,{children:"The GitHub Actions workflow automatically:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Runs ",(0,t.jsx)(n.code,{children:"npm run generate-configs"})]}),"\n",(0,t.jsxs)(n.li,{children:["Overwrites ",(0,t.jsx)(n.code,{children:"plugins.config.js"}),", ",(0,t.jsx)(n.code,{children:"userdata.json"}),", and ",(0,t.jsx)(n.code,{children:"userdata.local.json"})]}),"\n",(0,t.jsx)(n.li,{children:"Builds the application"}),"\n",(0,t.jsx)(n.li,{children:"Deploys to GitHub Pages"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"GitHub Actions workflow showing successful deployment",src:i(2949).A+"",width:"1054",height:"700"})}),"\n",(0,t.jsx)(n.admonition,{title:"Production Configuration",type:"danger",children:(0,t.jsxs)(n.p,{children:["The deployment process ",(0,t.jsx)(n.strong,{children:"always"})," regenerates configuration files from ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"}),". Manual edits to generated files will not persist through deployments."]})}),"\n",(0,t.jsx)(n.h3,{id:"custom-domain-configuration",children:"Custom Domain Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["For custom domains, update the ",(0,t.jsx)(n.code,{children:"url"})," field in ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const config: TexlyreConfig = {\n  url: 'https://your-custom-domain.com',\n  baseUrl: '/',\n  // ...\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-workflow",children:"Configuration Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"recommended-workflow",children:"Recommended Workflow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Edit"})," ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," with desired changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run"})," ",(0,t.jsx)(n.code,{children:"npm run generate-configs"})," to update generated files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test"})," changes locally with ",(0,t.jsx)(n.code,{children:"npm run dev"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Commit"})," both ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," and generated files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Deploy"})," using ",(0,t.jsx)(n.code,{children:"npm run start"})," or GitHub Actions"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"local-development-overrides",children:"Local Development Overrides"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"local"})," configuration block for development-specific settings:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"userdata: {\n  default: {\n    settings: {\n      latex: {\n        texliveEndpoint: 'https://texlive.emaily.re',\n      },\n    },\n  },\n  local: {\n    settings: {\n      latex: {\n        texliveEndpoint: 'http://localhost:5004',\n      },\n    },\n  },\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This generates:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"userdata.json"})," with production endpoints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"userdata.local.json"})," with local development endpoints"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"configuration-not-applied",children:"Configuration Not Applied"}),"\n",(0,t.jsx)(n.p,{children:"If configuration changes don't appear:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Verify ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," syntax is valid"]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"npm run generate-configs"})," manually"]}),"\n",(0,t.jsx)(n.li,{children:"Clear browser cache and reload"}),"\n",(0,t.jsx)(n.li,{children:"Check browser console for configuration errors"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"plugin-not-loading",children:"Plugin Not Loading"}),"\n",(0,t.jsx)(n.p,{children:"Ensure plugins are:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Registered in ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})," under the correct category"]}),"\n",(0,t.jsxs)(n.li,{children:["Located in the ",(0,t.jsx)(n.code,{children:"extras"})," directory with correct paths"]}),"\n",(0,t.jsx)(n.li,{children:"Properly exported and implementing required interfaces"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,t.jsx)(n.p,{children:"If builds fail after configuration changes:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Validate TypeScript types in ",(0,t.jsx)(n.code,{children:"texlyre.config.ts"})]}),"\n",(0,t.jsx)(n.li,{children:"Ensure all referenced plugins exist"}),"\n",(0,t.jsxs)(n.li,{children:["Check that ",(0,t.jsx)(n.code,{children:"baseUrl"})," and other paths are valid"]}),"\n",(0,t.jsx)(n.li,{children:"Review GitHub Actions logs for specific errors"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},9806:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/export-account-menu-5b8287cf4f793fe9bc05e82a8a2ccff1.png"}}]);